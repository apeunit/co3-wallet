@host = https://co3-pantheon.di.unito.it:4040/graphql
@eth_account = 0xCdB9eB496ba1686da2cB3DdCd74a6904EC5BE9e1
@token_symbol = TSST

### GET ALL TOKENS

POST {{host}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query tokenAddedMany {
    tokenAddedMany(filter: {}) {
        _id
        contractAddress
        name
        symbol
        decimals
        logoURL
        purpose
        owner
        hardCap
        timestamp
        mintable
    }
}


### Get Balance for a contract
POST https://co3-pantheon.di.unito.it:4040/graphql
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query balanceNotificationMany($accountPk: String, $tokenSymbol: String) {
    balanceNotificationMany(filter: { account_pk: $accountPk, token_symbol: $tokenSymbol }) {
        _id
        name
        token_symbol
        amount
        contractAddress
        owner
    }
}

{
    "accountPk": "0xCdB9eB496ba1686da2cB3DdCd74a6904EC5BE9e1",
    "tokenSymbol": "TSST"
}

### GET ALL BALANCES FOR AN ACCOUNT
POST {{host}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query balanceNotifyQuery($accountPk: String!) {
    balanceNotificationMany(filter: { account_pk: $accountPk }) {
        _id
        name
        token_symbol
        computed_at
        amount
        logoURL
        purpose
        decimals
        contractAddress
        owner
    }
}

{
    "accountPk": "{{eth_account}}"
}

### GET ALL BALANCES FOR A TOKEN
POST {{host}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query balanceNotifyQuery($token: String!) {
    balanceNotificationMany(filter: { token_symbol: $token }) {
        _id
        computed_at
        amount
        logoURL
        purpose
        contractAddress
        owner
    }
}

{
    "token": "{{token_symbol}}"
}


### Contracts that the account is owner
# 5fb3a07994cb876484be3a7f
POST {{host}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query tokenAddedManyQuery($VALUE: String!) {
  tokenAddedMany(filter: {symbol: $VALUE}){
    contractAddress
    name
    symbol
    decimals
    logoURL
    owner
    hardCap
    timestamp
    mintable
    purpose
  }
}

{
    "VALUE": "TSST"
}


### 

POST {{host}}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query transferQuery($accountPk: String!, $ts: String!, $eo: Date!) {
transferNotificationMany(
    filter: { 
        OR: [{ receiver_pk: $accountPk }, { sender_pk: $accountPk }],
        token_symbol: $ts,
        executed_on_gt: $eo
    }
) {
        _id
        receiver_pk
        token_symbol
        executed_on
        amount
        sender_pk
        purpose
        contractAddress
        owner
        decimals
    }
}

{
    "accountPk": "{{eth_account}}",
    "ts": "{{token_symbol}}",
    "eo": "2020-12-08T10:37:51.150Z"
}